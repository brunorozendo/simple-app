plugins {
    id 'groovy'
    id 'java-library'
    id 'org.owasp.dependencycheck'
}

repositories {
    gradlePluginPortal()
    mavenCentral()
}

group = "com.brozendo"
version = theVersion


dependencies {

    api platform(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES)

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    // Mapstruct HAS TO BE after lombok, otherwise it will not use the generated getter/setter
    compileOnly 'org.mapstruct:mapstruct:1.5.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'

    //testImplementation 'org.apache.groovy:groovy:4.0.3'
    testImplementation 'org.codehaus.groovy:groovy:3.0.12'
    //testImplementation platform('org.spockframework:spock-bom:2.2-M3-groovy-4.0')
    testImplementation platform('org.spockframework:spock-bom:2.2-M3-groovy-3.0')
    //testImplementation 'org.spockframework:spock-core:2.2-M3-groovy-4.0'
    testImplementation 'org.spockframework:spock-core'


    testImplementation( "com.athaydes:spock-reports:2.3.0-groovy-3.0" ) {
        transitive = false // this avoids affecting your version of Groovy/Spock
    }
    //testImplementation 'org.apache.groovy:groovy-json:4.0.3'
    testImplementation 'org.codehaus.groovy:groovy-json:3.0.12'
    //testImplementation 'org.apache.groovy:groovy-templates:4.0.3'
    testImplementation 'org.codehaus.groovy:groovy-templates:3.0.12'
    //testImplementation 'org.apache.groovy:groovy-xml:4.0.3'
    testImplementation 'org.codehaus.groovy:groovy-xml:3.0.12'

    // if you don't already have slf4j-api and an implementation of it in the classpath, add this!
    testImplementation 'org.slf4j:slf4j-api:1.7.36'
    //testRuntimeClasspath 'org.slf4j:slf4j-simple:1.7.30'
}






test {
    systemProperty 'com.athaydes.spockframework.report.internal.HtmlReportCreator.inlineCss', 'false'
    testLogging {
        events "passed", "skipped", "failed" //Show report when running tests
    }
    useJUnitPlatform() //required, if not present the test will not be found by gradle
}


sourceSets {
    main {
        groovy { srcDirs = [] }
    }
    test{
        java{ srcDirs = [] }
    }

}
